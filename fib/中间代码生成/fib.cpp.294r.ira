
;; Function __static_initialization_and_destruction_0.constprop (_Z41__static_initialization_and_destruction_0ii.constprop.0, funcdef_no=2280, decl_uid=49874, cgraph_uid=1024, symbol_order=1202) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
rescanning insn with uid = 14.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 82 uninteresting
Reg 83 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 82: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 8 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r83,l0) best DREG, allocno DREG
    a0 (r82,l0) best SIREG, allocno SIREG

  a0(r82,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:1000,1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:4000,4000 Q_REGS:4000,4000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:4000,4000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:36000,36000 INT_SSE_REGS:36000,36000 ALL_REGS:528000,528000 MEM:17000,17000
  a1(r83,l0) costs: AREG:2000,2000 DREG:-1000,-1000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:23000,23000 INT_SSE_REGS:23000,23000 ALL_REGS:316000,316000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:4000,1000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:4000,4000 Q_REGS:8000,8000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:4000,4000 SSE_FIRST_REG:30000,30000 NO_REX_SSE_REGS:30000,30000 SSE_REGS:30000,30000 MMX_REGS:65000,65000 INT_SSE_REGS:39000,39000 ALL_REGS:534000,534000 MEM:30000,30000
  a1(r83,l0) costs: AREG:4000,4000 DREG:2000,-1000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:322000,322000 MEM:18000,18000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 11(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
 a0(r82): [5..14]
 a1(r83): [7..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r82): [0..1]
 a1(r83): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r82,l0) conflicts: a1(r83,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a1(r83,l0) conflicts: a0(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  pref0:a1(r83)<-hr1@1500
  pref1:a0(r82)<-hr4@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r82 1r83
    modified regnos: 82 83
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@38000
          2:( 0 2-6 36-43)@52000
      Allocno a0r82 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-75)
      Allocno a1r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
      Pushing a1(r83,l0)(cost 0)
      Pushing a0(r82,l0)(cost 0)
      Popping a0(r82,l0)  --         assign reg 6
      Popping a1(r83,l0)  --         assign reg 1
Disposition:
    0:r82  l0     6    1:r83  l0     1
New iteration of spill/restore move
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__static_initialization_and_destruction_0.constprop

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={1d,2u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,2u} r83={1d,1u} 
;;    total ref usage 175{159d,16u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 82)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f356b881c60 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f356b881c60 __ioinit>)
        (nil)))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f356b881c60 __ioinit>)
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f356bb80200 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f356bb80200 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 83)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f356b410c60 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f356b410c60 __dso_handle>)
        (nil)))
(insn 9 8 11 2 (set (reg:DI 1 dx)
        (reg/f:DI 83)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f356b410c60 __dso_handle>)
            (nil))))
(insn 11 9 14 2 (set (reg:DI 4 si)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f356b881c60 __ioinit>)
            (nil))))
(insn 14 11 15 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f356bb80400 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f356bb80400 __dt_comp >)
        (nil)))
(call_insn/j 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f356b459400 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 828 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f356b459400 __cxa_atexit>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(barrier 16 15 0)

;; Function main (main, funcdef_no=1778, decl_uid=44906, cgraph_uid=512, symbol_order=542) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Removing SCRATCH to p111 in insn #4 (nop 2)
rescanning insn with uid = 4.
Removing SCRATCH to p112 in insn #64 (nop 3)
rescanning insn with uid = 64.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 94 uninteresting
Reg 106 uninteresting
Reg 108 uninteresting
Reg 84: local to bb 2 def dominates all uses has unique first use
Ignoring reg 107, has equiv memory
Reg 109 uninteresting
Reg 85: local to bb 2 def dominates all uses has unique first use
Reg 83: local to bb 4 def dominates all uses has unique first use
Reg 110 uninteresting
Reg 87: local to bb 4 def dominates all uses has unique first use
Examining insn 40, def for 83
  all ok
Examining insn 19, def for 84
  all ok
Examining insn 29, def for 85
  all ok
Examining insn 46, def for 87
  all ok
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 94: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 106: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 20 (nil))
Reg 93 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r110,l1) best AREG, allocno AREG
    a7 (r109,l0) best AREG, allocno AREG
    a9 (r108,l0) best AREG, allocno AREG
    a17 (r107,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r106,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best DIREG, allocno DIREG
    a11 (r93,l0) best SIREG, allocno SIREG
    a15 (r90,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r88,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r87,l1) best DIREG, allocno DIREG
    a13 (r86,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best DIREG, allocno DIREG
    a8 (r84,l0) best DIREG, allocno DIREG
    a18 (r83,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,11262 NO_REX_SSE_REGS:582,11262 SSE_REGS:582,11262 MMX_REGS:582,11262 INT_SSE_REGS:582,11262 ALL_REGS:9700,187700 MEM:97,1877
  a2(r86,l0) costs: AREG:0,1780 DREG:0,1780 CREG:0,1780 BREG:0,1780 SIREG:0,1780 DIREG:0,1780 AD_REGS:0,1780 CLOBBERED_REGS:0,1780 Q_REGS:0,1780 NON_Q_REGS:0,1780 TLS_GOTBASE_REGS:0,1780 GENERAL_REGS:0,1780 SSE_FIRST_REG:582,21942 NO_REX_SSE_REGS:582,21942 SSE_REGS:582,21942 MMX_REGS:582,40632 INT_SSE_REGS:582,40632 ALL_REGS:9700,664740 MEM:97,15227
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,16602 NO_REX_SSE_REGS:582,16602 SSE_REGS:582,16602 MMX_REGS:582,32622 INT_SSE_REGS:582,32622 ALL_REGS:9700,479620 MEM:97,14337
  a4(r106,l0) costs: AREG:440,2220 DREG:440,2220 CREG:440,2220 BREG:440,2220 SIREG:440,2220 DIREG:440,2220 AD_REGS:440,2220 CLOBBERED_REGS:440,2220 Q_REGS:440,2220 NON_Q_REGS:440,2220 TLS_GOTBASE_REGS:440,2220 GENERAL_REGS:440,2220 SSE_FIRST_REG:1980,7320 NO_REX_SSE_REGS:1980,7320 SSE_REGS:1980,7320 MMX_REGS:3960,15530 INT_SSE_REGS:3960,15530 ALL_REGS:58080,246760 MEM:1870,7210
  a5(r107,l0) costs: AREG:440,2220 DREG:440,2220 CREG:440,2220 BREG:440,2220 SIREG:440,2220 DIREG:440,2220 AD_REGS:440,2220 CLOBBERED_REGS:440,2220 Q_REGS:440,2220 NON_Q_REGS:440,2220 TLS_GOTBASE_REGS:440,2220 GENERAL_REGS:440,2220 SSE_FIRST_REG:1980,7320 NO_REX_SSE_REGS:1980,7320 SSE_REGS:1980,7320 MMX_REGS:4180,15750 INT_SSE_REGS:4180,15750 ALL_REGS:58300,246980 MEM:660,6000
  a6(r85,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2090,2090 INT_SSE_REGS:2090,2090 ALL_REGS:34320,34320 MEM:770,770
  a7(r109,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a8(r84,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2090,2090 INT_SSE_REGS:2090,2090 ALL_REGS:34320,34320 MEM:770,770
  a9(r108,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a10(r94,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2530,2530 INT_SSE_REGS:2530,2530 ALL_REGS:34760,34760 MEM:1210,1210
  a11(r93,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1320,1320
  a12(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a13(r86,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:40050,40050 INT_SSE_REGS:40050,40050 ALL_REGS:655040,655040 MEM:15130,15130
  a14(r88,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16020,16020 NO_REX_SSE_REGS:16020,16020 SSE_REGS:16020,16020 MMX_REGS:32040,32040 INT_SSE_REGS:32040,32040 ALL_REGS:469920,469920 MEM:14240,14240
  a15(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:10680,10680 INT_SSE_REGS:10680,10680 ALL_REGS:178000,178000 MEM:1780,1780
  a16(r106,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a17(r107,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a18(r83,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:5340,5340
  a19(r87,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:-890,-890 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:6230,6230
  a20(r110,l1) costs: AREG:-890,-890 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790


Pass 1 for finding pseudo/allocno costs

    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:582,11262 NO_REX_SSE_REGS:582,11262 SSE_REGS:582,11262 MMX_REGS:1164,22524 INT_SSE_REGS:1164,22524 ALL_REGS:10282,198962 MEM:582,10372
  a2(r86,l0) costs: GENERAL_REGS:0,1780 SSE_FIRST_REG:582,27282 NO_REX_SSE_REGS:582,27282 SSE_REGS:582,27282 MMX_REGS:1164,58124 INT_SSE_REGS:1164,46554 ALL_REGS:10282,670662 MEM:582,24612
  a3(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:582,16602 NO_REX_SSE_REGS:582,16602 SSE_REGS:582,16602 MMX_REGS:1164,35874 INT_SSE_REGS:1164,35874 ALL_REGS:10282,485542 MEM:582,14822
  a4(r106,l0) costs: GENERAL_REGS:440,2220 SSE_FIRST_REG:3300,13980 NO_REX_SSE_REGS:3300,13980 SSE_REGS:3300,13980 MMX_REGS:7150,30290 INT_SSE_REGS:4290,15860 ALL_REGS:58740,247420 MEM:3300,13980
  a5(r107,l0) costs: GENERAL_REGS:440,2220 SSE_FIRST_REG:3300,13980 NO_REX_SSE_REGS:3300,13980 SSE_REGS:3300,13980 MMX_REGS:7150,30290 INT_SSE_REGS:4290,15860 ALL_REGS:58960,247640 MEM:1980,12660
  a6(r85,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4180,4180 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:1980,1980
  a7(r109,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a8(r84,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4180,4180 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:1980,1980
  a9(r108,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a10(r94,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35420,35420 MEM:1980,1980
  a11(r93,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1980,1980
  a12(r111,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a13(r86,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:26700,26700 NO_REX_SSE_REGS:26700,26700 SSE_REGS:26700,26700 MMX_REGS:56960,56960 INT_SSE_REGS:45390,45390 ALL_REGS:660380,660380 MEM:24030,24030
  a14(r88,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16020,16020 NO_REX_SSE_REGS:16020,16020 SSE_REGS:16020,16020 MMX_REGS:34710,34710 INT_SSE_REGS:34710,34710 ALL_REGS:475260,475260 MEM:14240,14240
  a15(r90,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:21360,21360 INT_SSE_REGS:21360,21360 ALL_REGS:188680,188680 MEM:9790,9790
  a16(r106,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:10680,10680
  a17(r107,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:10680,10680
  a18(r83,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:22250,22250 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:9790,9790
  a19(r87,l1) costs: AREG:3560,3560 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:1780,-890 AD_REGS:3560,3560 CLOBBERED_REGS:1780,1780 Q_REGS:3560,3560 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:16020,16020 NO_REX_SSE_REGS:16020,16020 SSE_REGS:16020,16020 MMX_REGS:33820,33820 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:16020,16020
  a20(r110,l1) costs: AREG:1780,-890 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:16020,16020 NO_REX_SSE_REGS:16020,16020 SSE_REGS:16020,16020 MMX_REGS:34710,34710 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:15130,15130

   Insn 70(l0): point = 0
   Insn 69(l0): point = 2
   Insn 66(l0): point = 5
   Insn 65(l0): point = 8
   Insn 64(l0): point = 10
   Insn 7(l0): point = 13
   Insn 6(l0): point = 15
   Insn 5(l0): point = 17
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 34(l0): point = 24
   Insn 33(l0): point = 26
   Insn 32(l0): point = 28
   Insn 29(l0): point = 30
   Insn 83(l0): point = 32
   Insn 28(l0): point = 34
   Insn 27(l0): point = 36
   Insn 25(l0): point = 38
   Insn 24(l0): point = 40
   Insn 23(l0): point = 42
   Insn 22(l0): point = 44
   Insn 20(l0): point = 46
   Insn 19(l0): point = 48
   Insn 82(l0): point = 50
   Insn 18(l0): point = 52
   Insn 17(l0): point = 54
   Insn 16(l0): point = 56
   Insn 15(l0): point = 58
   Insn 14(l0): point = 60
   Insn 13(l0): point = 62
   Insn 12(l0): point = 64
   Insn 11(l0): point = 66
   Insn 10(l0): point = 68
   Insn 4(l0): point = 70
   Insn 56(l1): point = 73
   Insn 55(l1): point = 75
   Insn 53(l1): point = 77
   Insn 52(l1): point = 79
   Insn 51(l1): point = 81
   Insn 50(l1): point = 83
   Insn 49(l1): point = 85
   Insn 46(l1): point = 87
   Insn 84(l1): point = 89
   Insn 45(l1): point = 91
   Insn 44(l1): point = 93
   Insn 42(l1): point = 95
   Insn 41(l1): point = 97
   Insn 40(l1): point = 99
 a0(r112): [10..10]
 a1(r90): [13..13]
 a2(r86): [13..15]
 a3(r88): [13..17]
 a4(r106): [13..56]
 a5(r107): [13..46]
 a6(r85): [27..30]
 a7(r109): [31..32]
 a8(r84): [43..48]
 a9(r108): [49..50]
 a10(r94): [63..64]
 a11(r93): [67..68]
 a12(r111): [70..70]
 a13(r86): [73..101]
 a14(r88): [73..101]
 a15(r90): [98..101] [73..77]
 a16(r106): [73..101]
 a17(r107): [73..101]
 a18(r83): [78..99]
 a19(r87): [84..87]
 a20(r110): [88..89]
 Rebuilding regno allocno list for 110
      Moving ranges of a17r107 to a5r107:  [73..101]
      Moving ranges of a16r106 to a4r106:  [73..101]
      Moving ranges of a15r90 to a1r90:  [98..101] [73..77]
      Moving ranges of a14r88 to a3r88:  [73..101]
 Rebuilding regno allocno list for 87
      Moving ranges of a13r86 to a2r86:  [73..101]
 Rebuilding regno allocno list for 83
Compressing live ranges: from 102 to 24 - 23%
Ranges after the compression:
 a0(r112): [0..0]
 a1(r90): [22..23] [16..17] [1..1]
 a2(r86): [16..23] [1..2]
 a3(r88): [16..23] [1..2]
 a4(r106): [16..23] [1..10]
 a5(r107): [16..23] [1..8]
 a6(r85): [3..4]
 a7(r109): [5..6]
 a8(r84): [7..8]
 a9(r108): [9..10]
 a10(r94): [11..12]
 a11(r93): [13..14]
 a12(r111): [15..15]
 a18(r83): [18..23]
 a19(r87): [18..19]
 a20(r110): [20..21]
+++Allocating 120 bytes for conflict table (uncompressed size 168)
;; a0(r112,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r90,l0) conflicts: a2(r86,l0) a3(r88,l0) a4(r106,l0) a5(r107,l0) a18(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r86,l0) conflicts: a1(r90,l0) a3(r88,l0) a4(r106,l0) a5(r107,l0) a19(r87,l0) a18(r83,l0) a20(r110,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a3(r88,l0) conflicts: a1(r90,l0) a2(r86,l0) a4(r106,l0) a5(r107,l0) a19(r87,l0) a18(r83,l0) a20(r110,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a4(r106,l0) conflicts: a1(r90,l0) a2(r86,l0) a3(r88,l0) a5(r107,l0) a6(r85,l0) a7(r109,l0) a8(r84,l0) a9(r108,l0) a19(r87,l0) a18(r83,l0) a20(r110,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a5(r107,l0) conflicts: a1(r90,l0) a2(r86,l0) a3(r88,l0) a4(r106,l0) a6(r85,l0) a7(r109,l0) a8(r84,l0) a19(r87,l0) a18(r83,l0) a20(r110,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a6(r85,l0) conflicts: a4(r106,l0) a5(r107,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a7(r109,l0) conflicts: a4(r106,l0) a5(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r84,l0) conflicts: a4(r106,l0) a5(r107,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a9(r108,l0) conflicts: a4(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r94,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a11(r93,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r111,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r83,l0) conflicts: a1(r90,l0) a2(r86,l0) a3(r88,l0) a4(r106,l0) a5(r107,l0) a19(r87,l0) a20(r110,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a19(r87,l0) conflicts: a2(r86,l0) a3(r88,l0) a4(r106,l0) a5(r107,l0) a18(r83,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a20(r110,l0) conflicts: a2(r86,l0) a3(r88,l0) a4(r106,l0) a5(r107,l0) a18(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a19(r87)<->a20(r110)@890:move
  cp1:a8(r84)<->a9(r108)@110:move
  cp2:a6(r85)<->a7(r109)@110:move
  pref0:a20(r110)<-hr0@1335
  pref1:a7(r109)<-hr0@165
  pref2:a9(r108)<-hr0@165
  pref3:a10(r94)<-hr5@165
  pref4:a11(r93)<-hr4@165
  pref5:a19(r87)<-hr5@1335
  pref6:a6(r85)<-hr5@165
  pref7:a8(r84)<-hr5@165
  regions=2, blocks=8, points=24
    allocnos=21 (big 0), copies=3, conflicts=0, ranges=22

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r112 1r90 2r86 3r88 4r106 5r107 6r85 7r109 8r84 9r108 10r94 11r93 12r111 18r83 19r87 20r110
    modified regnos: 83 84 85 86 87 88 90 93 94 106 107 108 109 110 111 112
    border:
    Pressure: GENERAL_REGS=7
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@67524
          2:( 0-3 5-6 36-43)@46360
            3:( 1-3 6 36-43)@75308
              4:( 3 6 40-43)@63980
      Allocno a0r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a2r86 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a3r88 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a4r106 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a5r107 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a6r85 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a7r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a8r84 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a9r108 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a10r94 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a11r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a12r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a18r83 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a19r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a20r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a19r87-a20r110 (freq=890):
          Result (freq=3560): a19r87(1780) a20r110(1780)
        Forming thread by copy 1:a8r84-a9r108 (freq=110):
          Result (freq=440): a8r84(220) a9r108(220)
        Forming thread by copy 2:a6r85-a7r109 (freq=110):
          Result (freq=440): a6r85(220) a7r109(220)
      Pushing a12(r111,l0)(cost 0)
      Pushing a0(r112,l0)(cost 0)
      Pushing a11(r93,l0)(cost 0)
      Pushing a10(r94,l0)(cost 0)
      Pushing a9(r108,l0)(cost 0)
      Pushing a8(r84,l0)(cost 0)
      Pushing a7(r109,l0)(cost 0)
      Pushing a6(r85,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Pushing a3(r88,l0)(cost 0)
      Forming thread from allocno a4r106:
        Making a4(r106,l0) colorable
      Forming thread from allocno a5r107:
        Making a5(r107,l0) colorable
      Forming thread from allocno a18r83:
        Making a18(r83,l0) colorable
      Pushing a5(r107,l0)(cost 10440)
      Pushing a4(r106,l0)(cost 11760)
      Pushing a18(r83,l0)(cost 9790)
      Pushing a20(r110,l0)(cost 0)
      Pushing a19(r87,l0)(cost 0)
      Pushing a2(r86,l0)(cost 0)
      Popping a2(r86,l0)  --         assign reg 3
      Popping a19(r87,l0)  --         assign reg 5
      Popping a20(r110,l0)  --         assign reg 0
      Popping a18(r83,l0)  --         assign reg 6
      Popping a4(r106,l0)  --         assign reg 40
      Popping a5(r107,l0)  --         assign reg 41
      Popping a3(r88,l0)  --         assign reg 42
      Popping a1(r90,l0)  --         assign reg 0
      Popping a6(r85,l0)  --         assign reg 5
      Popping a7(r109,l0)  --         assign reg 0
      Popping a8(r84,l0)  --         assign reg 5
      Popping a9(r108,l0)  --         assign reg 0
      Popping a10(r94,l0)  --         assign reg 5
      Popping a11(r93,l0)  --         assign reg 4
      Popping a0(r112,l0)  --         assign reg 0
      Popping a12(r111,l0)  --         assign reg 0
Disposition:
   18:r83  l0     6    8:r84  l0     5    6:r85  l0     5    2:r86  l0     3
   19:r87  l0     5    3:r88  l0    42    1:r90  l0     0   11:r93  l0     4
   10:r94  l0     5    4:r106 l0    40    5:r107 l0    41    9:r108 l0     0
    7:r109 l0     0   20:r110 l0     0   12:r111 l0     0    0:r112 l0     0
New iteration of spill/restore move
+++Costs: overall 3780, reg 3780, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,5u} r1={9d} r2={9d} r4={16d,7u} r5={16d,7u} r6={1d,7u} r7={1d,15u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,6u} r17={15d,3u} r18={8d} r19={1d,12u,2e} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,3u} r87={1d,1u} r88={2d,2u} r90={2d,1u} r93={1d,1u} r94={1d,1u} r106={1d,3u} r107={1d,3u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d} r112={1d} 
;;    total ref usage 681{596d,83u,2e} in 48{40 regular + 8 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.49891+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [9 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 111)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "fib.cpp":4:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 4 11 2 (parallel [
            (set (reg/f:DI 93)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fib.cpp":9:9 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 93)) "fib.cpp":9:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 94)
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f356b881e10 cin>)) "fib.cpp":9:9 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f356b881e10 cin>)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 94)) "fib.cpp":9:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f356b881e10 cin>)
            (nil))))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f356b7afe00 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "fib.cpp":9:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f356b7afe00 operator>>>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "fib.cpp":10:10 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 106)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f356b881ea0 cout>)) "fib.cpp":10:10 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f356b881ea0 cout>)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 106)) "fib.cpp":10:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f356b881ea0 cout>)
        (nil)))
(call_insn 18 17 82 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f356bb3b500 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "fib.cpp":10:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f356bb3b500 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 82 18 19 2 (set (reg:DI 108)
        (reg:DI 0 ax)) "fib.cpp":10:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 82 20 2 (set (reg/f:DI 84 [ _9 ])
        (reg:DI 108)) "fib.cpp":10:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 20 19 22 2 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f356bb4e600 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "fib.cpp":10:15 74 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f356bb4e600 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])
        (nil)))
(insn 22 20 23 2 (set (reg:DI 4 si)
        (reg:DI 107)) "fib.cpp":10:15 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f356bb4e600 endl>)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _9 ])) "fib.cpp":10:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _9 ])
        (nil)))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f356bb2b000 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "fib.cpp":10:15 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f356bb2b000 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 25 24 27 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "fib.cpp":11:10 75 {*movsi_internal}
     (nil))
(insn 27 25 28 2 (set (reg:DI 5 di)
        (reg/f:DI 106)) "fib.cpp":11:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f356b881ea0 cout>)
        (nil)))
(call_insn 28 27 83 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f356bb3b500 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "fib.cpp":11:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f356bb3b500 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 83 28 29 2 (set (reg:DI 109)
        (reg:DI 0 ax)) "fib.cpp":11:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 29 83 32 2 (set (reg/f:DI 85 [ _12 ])
        (reg:DI 109)) "fib.cpp":11:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 32 29 33 2 (set (reg:DI 4 si)
        (reg:DI 107)) "fib.cpp":11:15 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f356bb4e600 endl>)
        (nil)))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _12 ])) "fib.cpp":11:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _12 ])
        (nil)))
(call_insn 34 33 37 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f356bb2b000 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "fib.cpp":11:15 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f356bb2b000 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 37 34 38 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32])
            (const_int 1 [0x1]))) "fib.cpp":12:11 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 72 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fib.cpp":12:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 57)
(note 72 38 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 72 6 3 (set (reg/v:SI 88 [ i ])
        (const_int 1 [0x1])) "fib.cpp":8:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 7 3 (set (reg/v:SI 86 [ b ])
        (const_int 1 [0x1])) "fib.cpp":7:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 54 3 (set (reg/v:SI 90 [ a ])
        (const_int 0 [0])) "fib.cpp":6:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 54 7 39 4 6 (nil) [1 uses])
(note 39 54 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/v:SI 83 [ b ])
        (reg/v:SI 86 [ b ])) 75 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg/v:SI 86 [ b ])
                (plus:SI (reg/v:SI 86 [ b ])
                    (reg/v:SI 90 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) "fib.cpp":15:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 90 [ a ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 44 4 (set (reg:SI 4 si)
        (reg/v:SI 86 [ b ])) "fib.cpp":16:11 75 {*movsi_internal}
     (nil))
(insn 44 42 45 4 (set (reg:DI 5 di)
        (reg/f:DI 106)) "fib.cpp":16:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f356b881ea0 cout>)
        (nil)))
(call_insn 45 44 84 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f356bb3b500 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "fib.cpp":16:11 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f356bb3b500 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 84 45 46 4 (set (reg:DI 110)
        (reg:DI 0 ax)) "fib.cpp":16:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 46 84 49 4 (set (reg/f:DI 87 [ _17 ])
        (reg:DI 110)) "fib.cpp":16:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 49 46 50 4 (set (reg:DI 4 si)
        (reg:DI 107)) "fib.cpp":16:16 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f356bb4e600 endl>)
        (nil)))
(insn 50 49 51 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _17 ])) "fib.cpp":16:16 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _17 ])
        (nil)))
(call_insn 51 50 52 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f356bb2b000 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "fib.cpp":16:16 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f356bb2b000 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 4 (parallel [
            (set (reg/v:SI 88 [ i ])
                (plus:SI (reg/v:SI 88 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fib.cpp":18:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 55 4 (set (reg/v:SI 90 [ a ])
        (reg/v:SI 83 [ b ])) 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ b ])
        (nil)))
(insn 55 53 56 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32])
            (reg/v:SI 88 [ i ]))) "fib.cpp":12:11 11 {*cmpsi_1}
     (nil))
(jump_insn 56 55 57 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) "fib.cpp":12:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 54)
(code_label 57 56 58 5 5 (nil) [1 uses])
(note 58 57 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 58 65 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.49891+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [9 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 112))
        ]) "fib.cpp":21:1 1164 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 112)
        (nil)))
(jump_insn 65 64 73 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "fib.cpp":21:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 68)
(note 73 65 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 73 67 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f356b4c3700 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "fib.cpp":21:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f356b4c3700 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 67 66 68)
(code_label 68 67 74 7 7 (nil) [1 uses])
(note 74 68 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 74 70 7 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "fib.cpp":21:1 75 {*movsi_internal}
     (nil))
(insn 70 69 0 7 (use (reg/i:SI 0 ax)) "fib.cpp":21:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2279, decl_uid=49812, cgraph_uid=1013, symbol_order=1188) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 5(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure:
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
      Forming thread from colorable bucket:
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={2d} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d,2u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 94{86d,8u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 5 2 6 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0x7f356b4a8400 __static_initialization_and_destruction_0.constprop>) [0 __static_initialization_and_destruction_0.constprop S1 A8])
        (const_int 0 [0])) "fib.cpp":21:1 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0x7f356b4a8400 __static_initialization_and_destruction_0.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(barrier 6 5 0)
